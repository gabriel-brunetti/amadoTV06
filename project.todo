LISTA DE AFAZERES

✔ Transferir o html/css para o formato e lógica blade @done(20-07-30 20:52)
--DATABASE---
    ✔ Modelou o banco de dados @done(20-07-30 20:53)
    ✔ Criar os models e migrations das entidades do banco de dados! @done(20-07-30 21:22)
    ✔ Configurar as migrations e os models @done(20-08-05 18:45)
    ✔ Criar os controllers da nossa aplicação (pensar quais são necessários) @done(20-08-05 21:36)
    ☐ Relacionamento hasMany entre Pedidos e Produtos
    ☐ Criar os seeds da aplicação

---CRUD DE CATEGORIAS---
    ☐ CRUD de categorias
        ☐ CREATE
        ☐ READ
        ☐ UPDATE
        ☐ DELETE

---CRUD DE PRODUTOS---
    ☐ CRUD de produtos @started(20-08-05 21:55)
        ☐ CREATE / Criar @started(20-08-13 20:38)
            ✔ Exibir um formulário de cadastro; @started(20-08-13 20:38) @done(20-08-13 21:00) @lasted(22m4s)
                ✔ Criar um formulário de cadastro @started(20-08-13 20:38) @done(20-08-13 21:58) @lasted(1h20m25s)
            ✔ Capturar os dados do formulário; @started(20-08-13 21:00) @done(20-08-13 21:20) @lasted(20m19s)
            ☐ Fazer Upload de imagem;
            ☐ Validar os dados do formulário;
            ✔ Salvar os dados no banco; @done(20-08-13 21:58)
                ✔ Adicionar um novo elemento no banco; @done(20-08-13 21:58)
        ☐ READ / Ler
            ☐ Mostrar Tabela com os produtos;
            ✔ Exibir um produto individualmente; @done(20-08-13 20:29)
        ☐ UPDATE / Atualizar
            ☐ Encontrar os dados existentes no banco;
            ☐ Exibir um formulário de edição com os dados existentes @edit;
            ☐ Capturar os dados do formulário @update;
            ☐ Validar os dados do formulário;
            ☐ Salvar os dados no banco;
        ☐ DELETE / Excluir
            ☐ Confirmar a ação do usuário;
            ☐ Executar a exclusão do banco de dados;

---CRUD DE USUARIOS---
    ☐ CRUD de usuarios 
---CRUD DE PEDIDOS---
    ☐ CRUD de pedidos

---ADMINISTRADOR E LOGIN---
    ☐ Páginga/Área de administrador mostrando os produtos
    ☐ Sistema de Login
        ☐ Instalar o laravel/ui
        ☐ laravel ui boostrap
        ☐ npm install && npm run dev
    ☐ Diferenciar Admin de Usuário Comum
    ☐ Sistema de Login usando Google/Facebook

---FRONT END---
    ☐ Tornar os layouts dinâmicos (consumidos dados do banco/controller)
    ☐ Upload de imagem

---CARRINHO---
    ☐ Carrinho

--EXTRAS---
    ☐ Pagamento -> integrar com sistema de pagamento
    ☐ Mandar sms para o usuário
    ☐ Comentários produtos
